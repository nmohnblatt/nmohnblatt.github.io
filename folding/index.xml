<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Folding on Nicolas Mohnblatt</title>
    <link>https://nmohnblatt.github.io/blog/folding/</link>
    <description>Recent content in Folding on Nicolas Mohnblatt</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>Copyright © 2024, Nicolas Mohnblatt.</copyright>
    <lastBuildDate>Thu, 17 Aug 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://nmohnblatt.github.io/blog/folding/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Paper Speedrun: Protostar</title>
      <link>https://nmohnblatt.github.io/speedrun-protostar/</link>
      <pubDate>Thu, 17 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://nmohnblatt.github.io/speedrun-protostar/</guid>
      <description>&lt;p&gt;&lt;em&gt;This article is cross-posted from the &lt;a href=&#34;https://geometry.xyz/notebook/paper-speedrun-protostar&#34;&gt;Geometry Notebook&lt;/a&gt;.&lt;/em&gt;&#xA;&lt;em&gt;Note that the ProtoStar paper has received many updates and some of the cross-term optimisations described in this speedrunm may no longer be up to date.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;Title&lt;/strong&gt;: ProtoStar: Generic Efficient Accumulation/Folding for Special Sound Protocols&lt;br&gt;&#xA;&lt;strong&gt;Authors&lt;/strong&gt;: Benedikt Bünz and Binyi Chen&lt;br&gt;&#xA;&lt;strong&gt;Link&lt;/strong&gt;: &lt;a href=&#34;https://eprint.iacr.org/2023/620&#34;&gt;https://eprint.iacr.org/2023/620&lt;/a&gt;&lt;br&gt;&#xA;&lt;strong&gt;TL;DR&lt;/strong&gt;: ProtoStar presents three results: 1) a generic toolchain to obtain efficient folding schemes from special sound protocols, 2) a simple special sound protocol for Plonkup where the prover does not depend on the size of the lookup table and 3) a non-uniform IVC scheme based on the former results. Their folding scheme follows the same pattern described in Nova/Sangria (relaxation of the equations) but introduces an optimisation to avoid committing to cross-terms: instead of checking $l$ equations of degree $d$, ProtoStar batches them into a single equation of degree $(d+2)$ and $2\sqrt{l}$ equations of degree 2. The cross-terms from the degree-2 equations can be committed to using the Pedersen vector commitment (as in Nova) and those arising from the single high degree check can be committed to using the identity function (the &amp;ldquo;commitments&amp;rdquo; are still short enough and binding!).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sangria: a Folding Scheme for PLONK</title>
      <link>https://nmohnblatt.github.io/sangria/</link>
      <pubDate>Fri, 17 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://nmohnblatt.github.io/sangria/</guid>
      <description>&lt;p&gt;&lt;em&gt;This article is cross-posted from the &lt;a href=&#34;https://geometry.xyz/notebook/sangria-a-folding-scheme-for-plonk&#34;&gt;Geometry Notebook&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;As shown in Nova &lt;a href=&#34;https://eprint.iacr.org/2021/370&#34;&gt;[KST22]&lt;/a&gt;, incrementally verifiable computation (IVC) can be realised using a folding scheme and a zkSNARK. In this article, we present a folding scheme for a variant of the PLONK arithmetization &lt;a href=&#34;https://eprint.iacr.org/2019/953&#34;&gt;[GWC19]&lt;/a&gt;. We then extend our relaxed PLONK arithmetization to accept custom gates of degree 2 and circuits with higher gate arity. Finally we outline avenues for future work including folding higher degree gates, supporting lookup gates and designing an IOP for the relaxed PLONK arithmetization.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
